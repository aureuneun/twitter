{"version":3,"sources":["firebase.ts","components/nav.tsx","components/tweet.tsx","components/tweet-factory.tsx","pages/home.tsx","pages/profile.tsx","routers/logged-in-router.tsx","components/auth-form.tsx","pages/auth.tsx","routers/logged-out-router.tsx","components/app.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","storageService","storage","Nav","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","Tweet","id","text","creatorId","attachmentUrl","useState","isEditing","tweet","editing","setEditing","toggleEditing","e","prev","onSubmit","a","preventDefault","doc","update","className","type","placeholder","value","onChange","currentTarget","maxLength","required","autoFocus","onClick","src","alt","currentUser","uid","window","confirm","delete","refFromURL","faTrash","faPencilAlt","TweetFactory","setTweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","attachmentRes","getDownloadURL","collection","add","createdAt","Date","now","faPlus","accept","files","theFile","reader","FileReader","readAsDataURL","onloadend","String","result","backgroundImage","faTimes","Home","console","log","tweets","setTweets","useEffect","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","data","Profile","history","useHistory","displayName","setDisplayName","updateProfile","push","signOut","commonRoutes","path","component","LoggedInRouter","basename","maxWidth","width","margin","route","exact","AuthForm","email","password","newAccount","error","form","setForm","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","provider","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","marginBottom","faGoogle","faGithub","LoggedOutRouter","App","init","setInit","isLoggedIn","setIsLoggedIn","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6563f9a7.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Nav = () => {\n  return (\n    <nav>\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { ChangeEvent, FormEvent, MouseEvent, useState } from 'react';\nimport { authService, dbService, storageService } from '../firebase';\n\ninterface ITweetProps {\n  id: string;\n  text?: string;\n  createdAt?: number;\n  creatorId?: string;\n  attachmentUrl?: string;\n}\n\nexport const Tweet: React.FC<ITweetProps> = ({\n  id,\n  text,\n  creatorId,\n  attachmentUrl,\n}) => {\n  const [editing, setEditing] = useState({ isEditing: false, tweet: text });\n  const toggleEditing = (\n    e: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>\n  ) => {\n    setEditing((prev) => ({ tweet: text, isEditing: !prev.isEditing }));\n  };\n\n  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    await dbService.doc(`tweets/${id}`).update({ text: editing.tweet });\n    setEditing({ ...editing, isEditing: false });\n  };\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value },\n    } = e;\n    setEditing({ ...editing, tweet: value });\n  };\n  return (\n    <div className=\"nweet\">\n      {editing.isEditing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your tweet\"\n              value={editing.tweet}\n              onChange={onChange}\n              maxLength={100}\n              required\n              autoFocus\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update tweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{text}</h4>\n          {attachmentUrl && <img src={attachmentUrl} alt=\"attachment\" />}\n          {creatorId === authService.currentUser?.uid && (\n            <div className=\"nweet__actions\">\n              <span\n                onClick={async () => {\n                  const ok = window.confirm(\n                    'Are you sure you want to delete this tweet?'\n                  );\n                  if (ok) {\n                    await dbService.doc(`tweets/${id}`).delete();\n                    if (attachmentUrl) {\n                      await storageService.refFromURL(attachmentUrl).delete();\n                    }\n                  }\n                }}\n              >\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { ChangeEvent, FormEvent, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { authService, dbService, storageService } from '../firebase';\n\nexport const TweetFactory = () => {\n  const [tweet, setTweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${authService.currentUser?.uid}/${uuidv4()}`);\n      const attachmentRes = await attachmentRef.putString(\n        attachment,\n        'data_url'\n      );\n      attachmentUrl = await attachmentRes.ref.getDownloadURL();\n    }\n    await dbService.collection('tweets').add({\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: authService.currentUser?.uid,\n      attachmentUrl,\n    });\n    setTweet('');\n    setAttachment('');\n  };\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value },\n    } = e;\n    setTweet(value);\n  };\n  const onFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { files },\n    } = e;\n    if (files) {\n      const theFile = files[0];\n      const reader = new FileReader();\n      if (theFile) {\n        reader.readAsDataURL(theFile);\n      } else {\n        setAttachment('');\n      }\n      reader.onloadend = () => {\n        setAttachment(String(reader.result));\n      };\n    }\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          type=\"text\"\n          placeholder=\"What is on your mind?\"\n          value={tweet}\n          onChange={onChange}\n          maxLength={100}\n          required\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          id=\"attach-file\"\n          style={{\n            display: 'none',\n          }}\n        />\n      </label>\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            alt=\"attachment\"\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={() => setAttachment('')}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Tweet } from '../components/tweet';\nimport { TweetFactory } from '../components/tweet-factory';\nimport { dbService } from '../firebase';\n\ninterface ITweets {\n  id: string;\n  text?: string;\n  createdAt?: number;\n  creatorId?: string;\n  attachmentUrl?: string;\n}\n\nexport const Home = () => {\n  console.log(process.env.PUBLIC_URL);\n  const [tweets, setTweets] = useState<ITweets[]>([]);\n  useEffect(() => {\n    const unsubscribe = dbService\n      .collection('tweets')\n      .orderBy('createdAt')\n      .onSnapshot((snapshot) => {\n        const tweets = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setTweets(tweets);\n      });\n    return () => unsubscribe();\n  }, []);\n  return (\n    <div className=\"container\">\n      <TweetFactory />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet) => (\n          <Tweet key={tweet.id} {...tweet} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { authService } from '../firebase';\n\nexport const Profile = () => {\n  const history = useHistory();\n  const [displayName, setDisplayName] = useState(\n    String(authService.currentUser?.displayName)\n  );\n  /*   const getMyTweets = async () => {\n    const tweets = await dbService\n      .collection('tweets')\n      .where('creatorId', '==', authService.currentUser?.uid)\n      .orderBy('createdAt')\n      .get();\n    const myTweets = tweets.docs.map((doc) => doc.data());\n  };\n  useEffect(() => {\n    getMyTweets();\n  }, []); */\n  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (authService.currentUser?.displayName !== displayName) {\n      await authService.currentUser?.updateProfile({ displayName });\n    }\n    history.push('/');\n  };\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value },\n    } = e;\n    setDisplayName(value);\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={displayName}\n          onChange={onChange}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span\n        className=\"formBtn cancelBtn logOut\"\n        onClick={() => {\n          authService.signOut();\n          history.push('/');\n        }}\n      >\n        Sign out\n      </span>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Nav } from '../components/nav';\nimport { Home } from '../pages/home';\nimport { Profile } from '../pages/profile';\n\nconst commonRoutes = [\n  { path: '/', component: <Home /> },\n  { path: '/profile', component: <Profile /> },\n];\n\nexport const LoggedInRouter = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Nav />\n      <Switch>\n        <div\n          style={{\n            maxWidth: 890,\n            width: '100%',\n            margin: '0 auto',\n            marginTop: 80,\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          {commonRoutes.map((route) => (\n            <Route exact key={route.path} path={route.path}>\n              {route.component}\n            </Route>\n          ))}\n        </div>\n      </Switch>\n    </Router>\n  );\n};\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport { authService } from '../firebase';\n\nexport const AuthForm = () => {\n  const [form, setForm] = useState({\n    email: '',\n    password: '',\n    newAccount: true,\n    error: '',\n  });\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { name, value },\n    } = e;\n    setForm({ ...form, [name]: value });\n  };\n  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      if (form.newAccount) {\n        await authService.createUserWithEmailAndPassword(\n          form.email,\n          form.password\n        );\n      } else {\n        await authService.signInWithEmailAndPassword(form.email, form.password);\n      }\n    } catch (error) {\n      setForm({ ...form, error: error.message });\n    }\n  };\n  const toggleAccount = () =>\n    setForm((prev) => ({ ...prev, newAccount: !prev.newAccount }));\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={form.email}\n          onChange={onChange}\n          required\n          className=\"authInput\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={form.password}\n          onChange={onChange}\n          required\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={form.newAccount ? 'Create account' : 'sign in'}\n        />\n        {form.error && <span className=\"authError\">{form.error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\" authSwitch\">\n        {form.newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n    </>\n  );\n};\n","import {\n  faGithub,\n  faGoogle,\n  faTwitter,\n} from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { MouseEvent } from 'react';\nimport { AuthForm } from '../components/auth-form';\nimport firebase, { authService } from '../firebase';\n\nexport const Auth = () => {\n  const onClick = async (\n    e: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>\n  ) => {\n    const {\n      currentTarget: { name },\n    } = e;\n    if (name === 'google') {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      await authService.signInWithPopup(provider);\n    } else if (name === 'github') {\n      const provider = new firebase.auth.GithubAuthProvider();\n      await authService.signInWithPopup(provider);\n    }\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button name=\"google\" onClick={onClick} className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button name=\"github\" onClick={onClick} className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Auth } from '../pages/auth';\n\nconst commonRoutes = [{ path: '/', component: <Auth /> }];\n\nexport const LoggedOutRouter = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <div\n          style={{\n            maxWidth: 890,\n            width: '100%',\n            margin: '0 auto',\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          {commonRoutes.map((route) => (\n            <Route exact key={route.path} path={route.path}>\n              {route.component}\n            </Route>\n          ))}\n        </div>\n      </Switch>\n    </Router>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { authService } from '../firebase';\nimport { LoggedInRouter } from '../routers/logged-in-router';\nimport { LoggedOutRouter } from '../routers/logged-out-router';\n\nexport const App = () => {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? (\n        isLoggedIn ? (\n          <LoggedInRouter />\n        ) : (\n          <LoggedOutRouter />\n        )\n      ) : (\n        <span>Initialization...</span>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/app';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}